#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define WIN 0
#define APL 1
#define NUM 2
#define FUN 3
#define NAV 4
#define MED 5
#define SYS 6
#define TLH 7
#define TLT 8
#define TRH 9

// 25 At least while acclimating, 25 is too short and will miss attempts
// 50 words like "layer", the rolled "er" turn into combos
#define COMBO_TIMEOUT 37

/ {
    behaviors {
        mlh: mod_tap_left_home_row {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_LEFT_HOME_ROW";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <COMBO_TIMEOUT>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <14 15 16>;
        };

        llh: layer_tap_positional_left {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_POSITIONAL_LEFT_HOME_ROW";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <COMBO_TIMEOUT>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <14 15 16>;
        };

        mlt: mod_tap_left_top_row {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_LEFT_TOP_ROW";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <COMBO_TIMEOUT>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <2 3 4>;
        };

        llt: layer_tap_left_top_row {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_LEFT_TOP_ROW";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <COMBO_TIMEOUT>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <2 3 4>;
        };

        mrh: mod_tap_right_home_row {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_RIGHT_HOME_ROW";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <COMBO_TIMEOUT>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <20 21>;
        };

        lrh: layer_tap_right_home_row {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_RIGHT_HOME_ROW";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <COMBO_TIMEOUT>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <20 21>;
        };
    };

    sl {
        release-after-ms = <10000>;
    };

    combos {
        compatible = "zmk,combos";
        combo_sys {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <0 1 2>;
            bindings = <&sl SYS>;
        };
        combo_menu {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <18 19>;
            bindings = <&kp K_CMENU>;
        };
        combo_tab {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <26 27>;
            bindings = <&kp TAB>;
        };
        combo_esc {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <27 28>;
            bindings = <&kp ESC>;
        };
        combo_caps {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <31 32>;
            bindings = <&kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        windows_layer {
            bindings = <
&none  &kp Q  &mlt LSFT W  &llt TLT E  &llt FUN R  &kp T     /**/  &kp Y    &kp U    &kp I       &kp O        &kp P     &none
&none  &kp A  &mlh LSFT S  &llh TLH D  &llh NUM F  &kp G     /**/  &kp H    &kp J    &lrh TRH K  &mrh LSFT L  &kp SCLN  &kp QUOT
&none  &kp Z  &kp X        &kp C       &kp V       &kp B     /**/  &kp N    &kp M    &kp CMMA    &kp DOT      &kp FSLH  &none
                           &kp LGUI    &kp LALT    &kp LCTL  /**/  &kp SPC  &mo NAV  &mo MED
            >;
        };
        
        apple_layer {
            bindings = <
&trans  &trans  &trans   &trans    &trans    &trans   /**/  &trans   &trans   &trans   &trans  &trans  &trans
&trans  &trans  &trans   &trans    &trans    &trans   /**/  &trans   &trans   &trans   &trans  &trans  &trans
&trans  &trans  &trans   &trans    &trans    &trans   /**/  &trans   &trans   &trans   &trans  &trans  &trans
                        &kp LCTL  &kp LALT  &kp LGUI  /**/  &kp SPC  &mo NAV  &mo MED
            >;
        };

        num_layer {
            bindings = <
&trans  &trans  &trans    &trans  &trans    &trans  /**/  &kp GRAV   &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp RBKT  &trans
&trans  &trans  &kp LSFT  &none   &kp LSFT  &trans  /**/  &kp EQL    &kp NUM_4  &kp NUM_5  &kp NUM_6  &kp LBKT  &trans
&trans  &trans  &trans    &trans  &trans    &trans  /**/  &kp MINUS  &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp BSLH  &trans
                          &trans  &trans    &trans  /**/  &trans     &kp NUM_0  &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &trans  &kp LSFT  &none   &kp LSFT  &trans  /**/  &kp F12  &kp F7  &kp F8  &kp F9  &kp RBKT  &trans
&trans  &trans  &trans    &trans  &trans    &trans  /**/  &kp F11  &kp F4  &kp F5  &kp F6  &kp LBKT  &trans
&trans  &trans  &trans    &trans  &trans    &trans  /**/  &kp F10  &kp F1  &kp F2  &kp F3  &kp BSLH  &trans
                          &trans  &trans    &trans  /**/  &trans   &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  /**/  &trans   &trans    &kp UARW  &kp PGUP  &kp DEL   &trans
&trans  &trans  &trans  &trans  &trans  &trans  /**/  &trans   &kp LARW  &kp DARW  &kp RARW  &kp BKSP  &trans
&trans  &trans  &trans  &trans  &trans  &trans  /**/  &kp INS  &kp PGDN  &kp HOME  &kp END   &kp RET   &trans
                        &trans  &trans  &trans  /**/  &trans   &trans    &trans
            >;
        };

        media_layer {
            bindings = <
&trans  &trans  &trans    &trans  &trans  &trans           /**/  &trans  &trans        &kp C_VOL_UP  &trans            &kp PRSC    &trans
&trans  &trans  &kp SLCK  &trans  &trans  &trans           /**/  &trans  &kp C_BRI_DN  &kp C_VOL_DN  &kp C_BRI_UP      &trans      &trans
&trans  &trans  &trans    &trans  &trans  &kp PAUSE_BREAK  /**/  &trans  &kp C_MUTE    &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT  &trans
                          &trans  &trans  &trans           /**/  &trans  &trans        &trans
            >;
        };

        system_layer {
            bindings = <
&trans  &trans      &to WIN       &trans       &trans         &trans     /**/  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &to APL  &out OUT_USB     &trans       &trans         &trans     /**/  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans      &bt BT_CLR     &trans      &out OUT_BLE  /**/  &trans  &trans  &trans  &trans  &trans  &trans
                               &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  /**/  &trans  &trans  &trans
            >;
        };

        trigger_left_home_row_layer {
            bindings = <
&trans  &trans  &trans    &trans    &trans   &trans  /**/  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LSFT  &none     &mo NUM  &trans  /**/  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans    &trans    &trans   &trans  /**/  &trans  &trans  &trans  &trans  &trans  &trans
                          &trans    &trans   &trans  /**/  &trans  &trans  &trans
            >;
        };

        trigger_left_top_row_layer {
            bindings = <
&trans  &trans  &kp LSFT  &none     &mo FUN  &trans  /**/  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans    &trans    &trans   &trans  /**/  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans    &trans    &trans   &trans  /**/  &trans  &trans  &trans  &trans  &trans  &trans
                          &trans    &trans   &trans  /**/  &trans  &trans  &trans
            >;
        };

        trigger_right_home_row_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  /**/  &trans  &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  /**/  &trans  &trans  &none     &kp RSFT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  /**/  &trans  &trans  &trans    &trans    &trans  &trans
                        &trans  &trans  &trans  /**/  &trans  &trans  &trans
            >;
        };
    };
};
