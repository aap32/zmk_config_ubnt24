#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define WIN 0
#define APL 1
#define NUM 2
#define FUN 3
#define NAV 4
#define MED 5
#define SYS 6
#define TRG 7

// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// [Keymap 3Jan2022 21:03]
// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

/ {
    behaviors {
        hlt: hold_preferred_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PREFERRED_LAYER_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
            bindings = <&mo>, <&kp>;
        };

        mtp: mod_tap_positional {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_POSITIONAL";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <25>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <2 3 4 14 15 16>;
        };

        ltp: layer_tap_positional {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_POSITIONAL";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <25>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <2 3 4 14 15 16>;
        };

        cht: combo_like_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "COMBO_LIKE_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <40>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_sys {
            timeout-ms = <25>;
            key-positions = <0 1 2 3>;
            bindings = <&to SYS>;
        };
        combo_menu {
            timeout-ms = <25>;
            key-positions = <18 19>;
            bindings = <&kp K_CMENU>;
        };
        combo_tab {
            timeout-ms = <25>;
            key-positions = <27 28>;
            bindings = <&kp TAB>;
        };
        combo_esc {
            timeout-ms = <25>;
            key-positions = <26 26>;
            bindings = <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        windows_layer {
            bindings = <
&none  &kp Q  &ltp FUN W  &ltp TRG E  &ltp TRG R  &kp T     /**/  &kp Y    &kp U    &kp I     &kp O    &kp P     &kp BKSP
&none  &kp A  &ltp NUM S  &ltp TRG D  &ltp TRG F  &kp G     /**/  &kp H    &kp J    &kp K     &kp L    &kp SCLN  &cht RET QUOT
&none  &kp Z  &kp X       &kp C       &kp V       &kp B     /**/  &kp N    &kp M    &kp CMMA  &kp DOT  &kp FSLH  &kp RSFT
                          &kp LGUI    &kp LALT    &kp LCTL  /**/  &kp SPC  &mo NAV  &mo MED
            >;
        };
        
        apple_layer {
            bindings = <
&trans  &trans  &trans   &trans    &trans    &trans   /**/  &trans   &trans   &trans   &trans  &trans  &trans
&trans  &trans  &trans   &trans    &trans    &trans   /**/  &trans   &trans   &trans   &trans  &trans  &trans
&trans  &trans  &trans   &trans    &trans    &trans   /**/  &trans   &trans   &trans   &trans  &trans  &trans
                        &kp LCTL  &kp LALT  &kp LGUI  /**/  &kp SPC  &mo NAV  &mo MED
            >;
        };

        num_layer {
            bindings = <
&trans   &kp LSFT   &trans    &trans     &trans   &trans  /**/   &trans    &kp NUM_7  &kp NUM_8  &kp NUM_9   &trans    &trans
&trans    &trans   &kp GRAV  &kp TILDE  &kp LSFT  &trans  /**/   &kp EQL   &kp NUM_4  &kp NUM_5  &kp NUM_6  &kp LBKT  &kp RBKT
&trans    &trans    &trans    &trans     &trans   &trans  /**/  &kp MINUS  &kp NUM_1  &kp NUM_2  &kp NUM_3  &kp BSLH   &trans
                              &trans     &trans   &trans  /**/   &trans    &kp NUM_0   &trans
            >;
        };

        function_layer {
            bindings = <
&trans    &kp LSFT   &trans   &trans   &trans    &trans  /**/  &kp F12   &kp F7   &kp F8   &kp F9    &trans     &trans
&mo SYS    &trans    &trans   &trans  &kp LSFT   &trans  /**/  &kp F11   &kp F4   &kp F5   &kp F6   &kp LBKT   &kp RBKT
&trans     &trans    &trans   &trans   &trans    &trans  /**/  &kp F10   &kp F1   &kp F2   &kp F3    &trans     &trans
                              &trans   &trans    &trans  /**/  &trans    &trans   &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans    &trans    &trans    &trans         /**/  &trans   &trans    &kp UARW  &kp PGUP  &kp PRSC  &kp DEL
&trans  &trans  &kp SLCK  &trans    &trans    &trans         /**/  &trans   &kp LARW  &kp DARW  &kp RARW   &trans   &kp RET
&trans  &trans  &trans    &kp CLCK  &trans  &kp PAUSE_BREAK  /**/  &kp INS  &kp PGDN  &kp HOME  &kp END    &trans   &trans
                          &trans    &trans    &trans         /**/  &trans   &trans    &trans
            >;
        };

        media_layer {
            bindings = <
&trans  &trans   &trans   &trans   &trans   &trans  /**/  &trans    &trans      &kp C_VOL_UP      &trans          &trans    &trans
&trans  &trans   &trans   &trans   &trans   &trans  /**/  &trans  &kp C_BRI_DN  &kp C_VOL_DN    &kp C_BRI_UP      &trans    &trans
&trans  &trans   &trans   &trans   &trans   &trans  /**/  &trans  &kp C_MUTE     &kp C_PREV   &kp C_PLAY_PAUSE  &kp C_NEXT  &trans
                          &trans  &kp RALT  &trans  /**/  &trans    &trans        &trans
            >;
        };

        system_layer {
            bindings = <
&trans  &trans      &to WIN       &trans       &trans         &trans     /**/  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &to APL  &out OUT_USB     &trans       &trans         &trans     /**/  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans      &bt BT_CLR     &trans      &out OUT_BLE  /**/  &trans  &trans  &trans  &trans  &trans  &trans
                               &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  /**/  &trans  &trans  &trans
            >;
        };

        trigger_layer {
            bindings = <
                &trans  &trans  &mo FUN  &kp LSFT  &kp LSFT  &trans     /**/  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &mo NUM  &kp LSFT  &kp LSFT  &trans     /**/  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans   &trans    &trans    &trans     /**/  &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans    &trans    &trans     /**/  &trans  &trans  &trans
            >;
        };
    };
};
